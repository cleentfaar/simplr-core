parameters:
    simplr.twig.cms_extension.class: Cleentfaar\Bundle\SimplrCmsBundle\Twig\CmsExtension
    simplr.backend.menu.builder.class: Cleentfaar\Simplr\Core\Menu\MenuBuilder
    simplr.exception_listener.class: Cleentfaar\Simplr\Core\EventListener\ExceptionListener
    simplr.controller_listener.class: Cleentfaar\Simplr\Core\EventListener\ControllerListener
    simplr.instance.class: Cleentfaar\Simplr\Core\Simplr
    simplr.doctor.class: Cleentfaar\Simplr\Core\Debug\Doctor
    simplr.form.installCms.class: Cleentfaar\Simplr\Core\Form\InstallCmsForm
    simplr.form.flow.installCms.class: Cleentfaar\Simplr\Core\Form\InstallCmsFormFlow
    simplr.entity.page.class: Cleentfaar\Simplr\Core\Entity\Page
    simplr.backend.menu.item.class: Knp\Menu\MenuItem
    simplr.optionmanager.class: Cleentfaar\Simplr\Core\Services\OptionManager
    simplr.pluginmanager.class: Cleentfaar\Simplr\Core\Services\PluginManager
    simplr.thememanager.class: Cleentfaar\Simplr\Core\Services\ThemeManager

services:
    simplr.instance:
        class: %simplr.instance.class%
        arguments: [@service_container]
    simplr.doctor:
        class: %simplr.doctor.class%
        arguments: [@service_container]
    simplr.form.installCms:
        class: %simplr.form.installCms.class%
        arguments: [@service_container]
        tags:
            - { name: form.type, alias: installCms }
    simplr.form.flow.installCms:
        class: %simplr.form.flow.installCms.class%
        parent: "craue.form.flow"
        scope: "request"
        calls:
            - [setFormType, [@simplr.form.installCms]]
    simplr.repository.page:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ %simplr.entity.page.class% ]
    simplr.optionmanager:
        class: %simplr.optionmanager.class%
        arguments: [@doctrine.orm.entity_manager]
    simplr.pluginmanager:
        class: %simplr.pluginmanager.class%
        arguments: [%pathto_plugins%, @simplr.optionmanager]
    simplr.thememanager:
        class: %simplr.thememanager.class%
        arguments: [%pathto_themes%, @simplr.optionmanager]
    simplr.controller_listener:
        class: %simplr.controller_listener.class%
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 0 }
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    simplr.exception_listener:
        class: %simplr.exception_listener.class%
        arguments: [@router]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    simplr.backend.menu.builder:
        class: %simplr.backend.menu.builder.class%
        arguments: ["@knp_menu.factory","@translator","@event_dispatcher"]
    simplr.backend.menu.top:
        class: %simplr.backend.menu.item.class% # the service definition requires setting the class
        factory_service: simplr.backend.menu.builder
        factory_method: createTopMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: simplr.backend.menu.top } # The alias is what is used to retrieve the menu
    simplr.backend.menu.sidebar:
        class: %simplr.backend.menu.item.class% # the service definition requires setting the class
        factory_service: simplr.backend.menu.builder
        factory_method: createSidebarMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: simplr.backend.menu.sidebar } # The alias is what is used to retrieve the menu
    simplr.twig.cms_extension:
        class: %simplr.twig.cms_extension.class%
        arguments: [@service_container, @twig.loader.filesystem]
        tags:
            - { name: twig.extension }